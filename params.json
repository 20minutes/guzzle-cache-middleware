{"name":"Guzzle Cache Middleware","tagline":"A HTTP Cache for Guzzle 6. It's a simple Middleware to be added in the HandlerStack.","body":"# guzzle-cache-middleware\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/kevinrob/guzzle-cache-middleware/v/stable)](https://packagist.org/packages/kevinrob/guzzle-cache-middleware) [![Total Downloads](https://poser.pugx.org/kevinrob/guzzle-cache-middleware/downloads)](https://packagist.org/packages/kevinrob/guzzle-cache-middleware) [![License](https://poser.pugx.org/kevinrob/guzzle-cache-middleware/license)](https://packagist.org/packages/kevinrob/guzzle-cache-middleware) [![Build Status](https://travis-ci.org/Kevinrob/guzzle-cache-middleware.svg)](https://travis-ci.org/Kevinrob/guzzle-cache-middleware)  \r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/Kevinrob/guzzle-cache-middleware/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/Kevinrob/guzzle-cache-middleware/?branch=master) [![SensioLabsInsight](https://insight.sensiolabs.com/projects/077ec9d6-9362-43be-83c9-cf1db2c9c802/mini.png)](https://insight.sensiolabs.com/projects/077ec9d6-9362-43be-83c9-cf1db2c9c802)\r\n\r\nA HTTP Cache for [Guzzle](https://github.com/guzzle/guzzle) 6. It's a simple Middleware to be added in the HandlerStack.\r\nThis project is under development but it's already functional.\r\n\r\n## Installation\r\n\r\n`composer require kevinrob/guzzle-cache-middleware:~0.5`\r\n\r\nor add it the your `composer.json` and make a `composer update kevinrob/guzzle-cache-middleware`.\r\n\r\n# Why?\r\nPerformance. It's very common to do some HTTP calls to an API for rendering a page and it takes times to do it.\r\n\r\n# How?\r\nWith a simple Middleware added at the top of the `HandlerStack` of Guzzle6.\r\n\r\n```php\r\nuse GuzzleHttp\\Client;\r\nuse GuzzleHttp\\HandlerStack;\r\nuse Kevinrob\\GuzzleCache;\r\n\r\n// Create default HandlerStack\r\n$stack = HandlerStack::create();\r\n\r\n// Add this middleware to the top with `push`\r\n$stack->push(new CacheMiddleware(), 'cache');\r\n\r\n// Initialize the client with the handler option\r\n$client = new Client(['handler' => $stack]);\r\n```\r\n\r\nYou can use a custom Cache with:\r\n```php\r\n[...]\r\nuse Doctrine\\Common\\Cache;\r\n\r\n[...]\r\n$stack->push(new CacheMiddleware(new PrivateCache(new FilesystemCache('/tmp/'))), 'cache');\r\n```\r\n\r\nYou can use `ChainCache` for using multiple `CacheProvider`. With that provider, you have to sort the different cache from the faster to the slower. Like that, you can have a very fast cache.\r\n```php\r\n[...]\r\nuse Doctrine\\Common\\Cache;\r\n\r\n[...]\r\n$stack->push(new CacheMiddleware(\r\n  new PrivateCache(\r\n    new ChainCache([\r\n      new ArrayCache(),\r\n      new ApcCache(),\r\n      new FileCache('/tmp/'),\r\n    ])\r\n  )\r\n), 'cache');\r\n```\r\n","google":"UA-15972421-4","note":"Don't delete this file! It's used internally to help with page regeneration."}